name: Build LaTeX Documents

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate matrix of main.tex files
        id: set-matrix
        run: |
          # Buscar solo archivos (no directorios) llamados main.tex
          files=$(find . -type f -name "main.tex" | sort)
          echo "Found files:"
          echo "$files"
          # Generar un objeto JSON compatible con matrix.include
          json=$(echo "$files" | jq -R -s 'split("\n") | map(select(length > 0)) | {include: map({file: .})}')
          echo "matrix=$json" >> $GITHUB_OUTPUT

  compile:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          # Cada job procesa un solo archivo main.tex
          root_file: ${{ matrix.file }}

      - name: Commit and push PDF
        run: |
          # Determinar la carpeta del main.tex (y se espera que ah√≠ se genere main.pdf)
          FILE_DIR=$(dirname "${{ matrix.file }}")
          echo "Expected PDF in: $FILE_DIR/main.pdf"
          git config --global user.name "vinograd0v"
          git config --global user.email "mmanosalva@unal.edu.co"
          if [ -f "$FILE_DIR/main.pdf" ]; then
            git add -f "$FILE_DIR/main.pdf"
            git commit -m "Automated PDF update for ${{ matrix.file }}"
            git push
          else
            echo "PDF not found in $FILE_DIR"
          fi
