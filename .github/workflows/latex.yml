name: Build LaTeX Documents

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find main.tex files and generate matrix
        id: set-matrix
        run: |
          # Buscar todos los archivos main.tex (solo archivos, no directorios)
          files=$(find . -type f -name "main.tex")
          echo "Found files:"
          echo "$files"
          # Generar matriz en formato JSON
          matrix=$(echo "$files" | jq -R -s -c 'split("\n") | map(select(length > 0)) | {include: map({file: .})}')
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  compile:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          # Se procesa cada archivo main.tex de forma individual
          root_file: ${{ matrix.file }}

      - name: Commit and push generated PDF
        run: |
          # Determinar el directorio donde se encuentra main.tex (y se genera main.pdf)
          FILE_DIR=$(dirname "${{ matrix.file }}")
          echo "Esperando PDF en: $FILE_DIR/main.pdf"
          git config --global user.name "vinograd0v"
          git config --global user.email "mmanosalva@unal.edu.co"
          # Solo hacemos commit si el PDF existe
          if [ -f "$FILE_DIR/main.pdf" ]; then
            git add -f "$FILE_DIR/main.pdf"
            git commit -m "Automated PDF update for ${{ matrix.file }}"
            git push
          else
            echo "No se encontr√≥ el PDF en $FILE_DIR"
          fi
